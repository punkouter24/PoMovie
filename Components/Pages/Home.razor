@page "/"
@rendermode InteractiveServer
@using PoMovie.Services
@inject MovieService MovieService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject EmailReminderService EmailReminderService

@if (movies == null)
{
    <p><em>Loading...</em></p>
}
else if (!movies.Any())
{
    <p>You have not added any movies yet.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Year</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var movie in movies)
            {
                <tr>
                    <td>@movie.Title</td>
                    <td>@movie.Year</td>
                </tr>
            }
        </tbody>
    </table>

     <button @onclick="SendEmail">Force Email</button>
}

@code {
    private List<Models.Movie> movies;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        if (user.Identity.IsAuthenticated)
        {
            var userId = user.FindFirst(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            if (userId != null)
            {
                movies = await MovieService.GetMoviesByUserAsync(userId);
            }
        }
    }

     private async Task SendEmail()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            var userId = user.FindFirst(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            if (userId != null)
            {
                var email = user.FindFirst(c => c.Type == System.Security.Claims.ClaimTypes.Email)?.Value;
                if (email != null)
                {
                    var movieList = string.Join(", ", movies.Select(m => m.Title));
                    await EmailReminderService.SendWeeklyEmailsAsync(email, "Your Movie List", $"Here is your list of movies: {movieList}");
                }
            }
        }
    }
}